// This model takes into consideration the number of severe cases,
// the frequency of each variant and the variant annotation.

model Annotated_variants {

  param GlobalDataSource data

  param Plate<String> variants
  param Plated<IntVar> num_freq
  param Plated<RealVar> frequency
  param Plate<String> gene
  param Plated<RealVar> effect

  random Plated<IntVar> num_severe
  random Plated<IntVar> Z_i
  random Plated<RealVar> gamma_i
  random Plated<RealVar> eta_i

  laws {
    for (Index<String> g : gene.indices){
      eta_i.get(g) ~ Beta(1, 100)

      for (Index<String> variant : variants.indices(g)) {
        gamma_i.get(variant, g) | RealVar eff = effect.get(variant, g)
                                ~ Gamma(eff, 1)

        Z_i.get(variant, g) | RealVar eta = eta_i.get(g)
                            ~ Bernoulli(eta)

        num_severe.get(variant, g) | IntVar Z =  Z_i.get(variant, g),
                                     RealVar gamma = gamma_i.get(variant, g),
                                     IntVar num = num_freq.get(variant, g),
                                     RealVar freq = frequency.get(variant, g)
                                   ~ Binomial(num, if (Z < 1) freq else (freq * gamma))
      }
    }
  }
}
