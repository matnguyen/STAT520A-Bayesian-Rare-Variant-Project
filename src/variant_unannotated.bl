// This model only takes into consideration the number of severe cases and
// the frequency of each variant.

model Variants {

  param GlobalDataSource data

  param Plate<String> variants
  param Plated<IntVar> num_freq
  param Plated<RealVar> frequency

  random Plated<IntVar> num_severe
  random Plated<IntVar> Z_j
  random Plated<RealVar> gamma_j

  random RealVar eta ?: latentReal

  laws {
    eta ~ Beta(1, 100)

    for (Index<String> variant : variants.indices) {
      gamma_j.get(variant) ~ Gamma(2, 1)

      Z_j.get(variant) | eta ~ Bernoulli(eta)

      num_severe.get(variant) | IntVar Z =  Z_j.get(variant),
                                RealVar gamma = gamma_j.get(variant),
                                IntVar num = num_freq.get(variant),
                                RealVar freq = frequency.get(variant)
                              ~ Binomial(num, if (Z < 1) freq else (freq * gamma))
    }
  }
}
